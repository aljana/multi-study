{"version":3,"file":"frontend/common/services/user.js","names":[],"mappings":"","sources":["frontend/common/services/user.js"],"sourcesContent":["class UserService {\n  constructor($resource, cacheService) {\n    this.user = $resource('users/:userId', {\n      userId: '@userId'\n    }, {\n      login: {\n        method: 'POST',\n        url: 'users/session-auth/'\n      },\n      logout: {\n        method: 'DELETE',\n        url: 'users/session-auth/'\n      },\n      me: {\n        method: 'GET',\n        url: 'users/me/'\n      }\n    });\n\n    this.authenticated = false;\n    this.cache = cacheService.create('user', {});\n\n    if ((this.credentials = this.cache.get('credentials'))) {\n      this.authenticated = true;\n    }\n\n    this.user.me().$promise.then((data) => {\n      this.authenticated = true;\n      this.credentials = data;\n      this.cache.put('credentials', data);\n    }, () => {\n      this.authenticated = false;\n      this.credentials = null;\n      this.cache.removeAll();\n    });\n  }\n\n  login(email, password, rememberMe) {\n    var promise = this.user.login({\n      email: email,\n      password: password,\n      rememberMe: rememberMe\n    }).$promise;\n\n    promise.then((data) => {\n      this.authenticated = true;\n      this.credentials = data;\n      this.cache.put('credentials', data);\n    });\n\n    return promise;\n  }\n\n  register(email, password, firstName, lastName) {\n    return this.user.save({\n      email: email,\n      password: password,\n      firstName: firstName,\n      lastName: lastName\n    }).$promise;\n  }\n\n  logout() {\n    this.cache.removeAll();\n    this.authenticated = false;\n    this.credentials = null;\n    this.user.logout();\n  }\n}\n\nUserService.$inject = ['$resource', 'CacheService'];\n\nexport default UserService;\n"],"sourceRoot":"/source/"}