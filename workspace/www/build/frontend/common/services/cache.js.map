{"version":3,"file":"frontend/common/services/cache.js","names":[],"mappings":"","sources":["frontend/common/services/cache.js"],"sourcesContent":["class CacheService {\n  constructor(cookieStore, cacheFactory) {\n    this.cacheFactory = cacheFactory;\n    this.polyfill = {\n      getItem: (key) => {\n        cookieStore.get(key);\n      },\n      setItem: (key, value) => {\n        cookieStore.put(key, value);\n      },\n      removeItem: (key) => {\n        cookieStore.remove(key);\n      }\n    };\n  }\n\n  create(name, options) {\n    if (!options.storageMode) {\n      options.storageMode = 'localStorage';\n    }\n    if (!window[options.storageMode]) {\n      options.storageImpl = this.polyfill;\n    }\n    return this.cacheFactory(name, options);\n  }\n}\n\nCacheService.$inject = ['$cookieStore', 'DSCacheFactory'];\n\nexport default CacheService;\n"],"sourceRoot":"/source/"}